name: Release DBI Patcher

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Verify pre-built zstd
      run: |
        if (Test-Path libs/zstd/zstd.exe) {
            echo "Using pre-built zstd.exe"
            Get-Item libs/zstd/zstd.exe
        } else {
            echo "Error: Pre-built zstd.exe not found"
            exit 1
        }
        
    - name: Build for Windows
      run: |
        make clean
        make -j4
        
    - name: Verify build output
      run: |
        if (Test-Path bin/dbipatcher.exe) {
            echo "Build successful: dbipatcher.exe found"
            Get-Item bin/dbipatcher.exe
        } else {
            echo "Build failed: dbipatcher.exe not found"
            exit 1
        }
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: dbipatcher-windows
        path: |
          bin/dbipatcher.exe
          libs/zstd/zstd.exe
        if-no-files-found: error

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential make libzstd-dev

    - name: Build for Linux
      run: |
        make clean
        make -j4
        
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: dbipatcher-linux
        path: bin/dbipatcher
        if-no-files-found: error

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        brew update
        brew install make zstd
        echo "PATH=/opt/homebrew/bin:/usr/local/bin:$PATH" >> $GITHUB_ENV
        
    - name: Build for macOS
      run: |
        make clean
        make -j4
        
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: dbipatcher-macos
        path: bin/dbipatcher
        if-no-files-found: error

  create-release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux, build-macos]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: List downloaded files
      run: |
        find artifacts -type f | sort

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: DBI Patcher ${{ github.ref_name }}
        body: |
          Automated build of DBI Patcher ${{ github.ref_name }}
          
          **Platforms included:**
          - Windows (x86_64)
          - Linux (x86_64)
          - macOS (x86_64)
          
          **Usage:**
          ```bash
          # Linux/macOS
          chmod +x dbipatcher
          ./dbipatcher --help
          
          # Windows
          dbipatcher.exe --help
          ```
        draft: false
        prerelease: false
        files: |
          artifacts/dbipatcher-windows/dbipatcher.exe
          artifacts/dbipatcher-linux/dbipatcher
          artifacts/dbipatcher-macos/dbipatcher
